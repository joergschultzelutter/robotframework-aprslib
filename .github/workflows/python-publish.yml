# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Workflow documentation: https://github.com/marketplace/actions/pypi-publish

name: Upload Python Package 

on:
#  release:
#    types: [published]
  push:

jobs:
  # 
  # JOB 1
  #
  # Get version from Python file and write it to a file named 
  # VERSION wrhich resides in the repo's root dir
  update-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Read robotframework-aprslibrary
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./src/AprsLibrary/AprsLibrary.py
      - name: get version via regex
        id: regex
        uses: actions-ecosystem/action-regex-match@v2
        with:
          regex: '__versin__\s=\s"(.*)"'
          flags: 'gim'
          text: '${{ steps.package.outputs.content }}'
      - name: Cancel build if version not found
        if: ${{ steps.regex.outputs.match == '' }}
        uses: andymckay/cancel-action@0.2
      - name: Write local VERSION file to work repo
        uses: DamianReeves/write-file-action@master
        with:
          path: './VERSION'
          contents: "${{ steps.regex.outputs.group1 }}"
          write-mode: overwrite
      - name: Update VERSION file in Repo
        uses: test-room-7/action-update-file@v1
        with:
          file-path: 'VERSION'
          commit-msg: Auto-update of VERSION file
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # 
  # JOB 2
  #
  # Deploy lib to PyPi
  deploy:
    runs-on: ubuntu-latest
    needs: update-version

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package to Prod PyPi
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PROD_PYPI_API_TOKEN }}
    - name: Publish package to Test PyPi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
